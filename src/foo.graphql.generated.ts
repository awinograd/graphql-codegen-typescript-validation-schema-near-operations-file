// This file is automatically generated. See gqlcodegen.yml for details
import type * as Types from "./types.graphql.generated";

import { z } from "zod";
import { BarInput, FooInput } from "./types.graphql.generated";

type Properties<T> = Required<{
  [K in keyof T]: z.ZodType<T[K], any, T[K]>;
}>;

type definedNonNullAny = {};

export const isDefinedNonNullAny = (v: any): v is definedNonNullAny =>
  v !== undefined && v !== null;

export const definedNonNullAnySchema = z
  .any()
  .refine((v) => isDefinedNonNullAny(v));

export function BarInputSchema(): z.ZodObject<Properties<BarInput>> {
  return z.object({
    bar: z.string(),
  });
}

export function FooInputSchema(): z.ZodObject<Properties<FooInput>> {
  return z.object({
    foo: z.string(),
  });
}

export type FooMutationVariables = Types.Exact<{
  input: Types.FooInput;
}>;

export type FooMutation = { readonly foo: { readonly field: string } };
